//
// server.cfg
//
// comments are written with "//" in front of them.

// GLOBAL SETTINGS

hostname = "test";
password = "test";

admins[] = {"76561198109144033","76561198059233810","76561198112818187","76561198117040793"};
passwordAdmin = "ydDAaFe45Ek";				// Password to become server admin. When you're in Arma MP and connected to the server, type '#login xyz'
serverCommandPassword = "32d4ag06fh1";               // Password required by alternate syntax of [[serverCommand]] server-side scripting.


logFile             = "server.log";


// WELCOME MESSAGE ("message of the day")
// It can be several lines, separated by comma
// Empty messages "" will not be displayed at all but are only for increasing the interval
motd[] = {};
motdInterval = 5;				// Time interval (in seconds) between each message


// JOINING RULES
verifySignatures    = 0;    // Prevent players with unknown mods from joining the server (best kept at 2 if you want to reduce the number of hackers)
requiredSecureId    = 2;    // was used to define type of secureID
equalModRequired    = 0;		// Outdated. If set to 1, player has to use exactly the same -mod= startup parameter as the server.
maxPlayers          = 40;        // Maximum amount of players. Anybody who joins the server is considered a player, regardless of their role or team.
kickDuplicate       = 1;         // Each player normally has its own unique ID. If set to 1, players with an ID that is identical to another player will be kicked
//requiredBuild     = 12345;     // Require clients joining to have at least this build version of game, preventing obsolete clients to connect
steamProtocolMaxDataSize = 2024;
//steamport= 2303; //xxxx being the particular game server port
//steamqueryport= 2304; // xxx1 being the particular game server port plus 1
allowedFilePatching = 0;                        // Allow or prevent client using -filePatching to join the server. 0, is disallow, 1 is allow HC, 2 is allow all clients (since Arma 3 1.49+)
/*
allowedVoteCmds[] = {
	{ "admin" },								// will default to {"admin", true, true, 0.5}
	{ "missions",	true,	true, 0.5 },		// not available after mission start
	{ "mission",	true,	true },				// will use global {{hl|voteThreshold}}
	{ "kick", false,	false, 0.75 },		// not available at all
	{ "restart",	true,	true, 0.8 },			// invalid threshold value. Will default to global {{hl|voteThreshold}}
	{ "reassign",	false,	true, 0.5 },		// not available before mission start
	{ "kick",true,	true, 0.55, 0.30 }	// means kicked in case either 55% of all players												// or 30% of players from his side (west, east, resistance, civilian) voted to kick him
};
*/
allowedVoteCmds[] = {};

// VOTING
voteMissionPlayers  = 1;         // Tells the server how many people must connect before displaying the mission selection screen, if you have not already selected a mission in this config
voteThreshold       = 0.8;      // Percentage (0.00 to 1.00) of players needed to vote for something, for example an admin or a new mission, to become effective. Set to 9999 to prevent people from voting random players as admins.

// MISSIONS CYCLE (see below)
class Missions {
      class Motard {
                   template = "Alerte_general_Manthys123456789";
                    //difficulty = "Regular";					// Server difficulty Settings (Recruit, Regular, Veteran, Mercenary)
                     difficulty = "Custom";
                     autoSelectMission = false;
                      //Respawn = "2"; 
};
};
    
missionWhitelist[] = {"PREDATOR"}; //an empty whitelist means there is no restriction on what missions are available

// INGAME SETTINGS
disableVoN = 1;					// If set to 1, Voice over Net will not be available
vonCodec = 1; 					// If set to 1 then it uses IETF standard OPUS codec, if to 0 then it uses SPEEX codec (since Arma 3 update 1.58+)  
vonCodecQuality = 30;				// since 1.62.95417 supports range 1-20 //since 1.63.x will supports range 1-30 //8kHz is 0-10, 16kHz is 11-20, 32kHz(48kHz) is 21-30 
persistent = 1;					// If 1, missions still run on even after the last player disconnected.
timeStampFormat = "short";			// Set the timestamp format used on each report line in server-side RPT file. Possible values are "none" (default),"short","full".
BattlEye = 0;					// Server to use BattlEye system 1 is active, 0 is inactive
allowedLoadFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi","ini"}; //only allow files with those extensions to be loaded via loadFile command (since Arma 3 build 1.19.124216)
allowedPreprocessFileExtensions[] = {"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi","ini"}; //only allow files with those extensions to be loaded via preprocessFile/preprocessFileLineNumber commands (since Arma 3 build 1.19.124323)
allowedHTMLLoadExtensions[] = {"htm","html","xml","txt","ini"}; //only allow files with those extensions to be loaded via HTMLLoad command (since Arma 3 build 1.27.126715)
//allowedHTMLLoadURIs = {}; // Leave commented to let missions/campaigns/addons decide what URIs are supported. Uncomment to define server-level restrictions for URIs
disconnectTimeout = 30; 					//  Server wait time before disconnecting client, default 90 seconds, range 5 to 90 seconds. (since Arma 3 update 1.56+)  
disableChannels[] = { {0,false,true},//CHANNEL, text, vocal
{1,false,true},
{2,false,true},
{3,false,true},
{4,false,true},
{5,false,true}
 };

// SCRIPTING ISSUES
onUserConnected = "";            // command to run when a player connects
onUserDisconnected = "";         // command to run when a player disconnects
doubleIdDetected = "";           // command to run if a player has the same ID as another player in the server
//regularCheck = "{}";				//  Server checks files from time to time by hashing them and comparing the hash to the hash values of the clients. //deprecated
 

// SIGNATURE VERIFICATION
onUnsignedData = "kick (_this select 0)";    // command to run if a player has unsigned data
onHackedData =  "kick (_this select 0)";     // command to run if a player has data with invalid signatures
onDifferentData = "";                        // command to run if a player has modified data